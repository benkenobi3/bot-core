version: '3.2'
services:
  backend:
    image: bot-core
    build: ./
    container_name: backend
    environment:
      - DB_NAME=coredb
      - DB_HOST=host
      - DB_PORT=port
      - TASKS_REDIS_HOST=redis
      - TASKS_REDIS_PORT=6379
      - GAMES_REDIS_HOST=redis
      - GAMES_REDIS_PORT=6379
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBHOOK_HOST=${WEBHOOK_HOST}
      - WEBHOOK_PORT=${WEBHOOK_PORT}
    restart: always
    networks:
      - backend
    expose:
      - 80
    depends_on:
      - tasks-redis
      - games-redis

  dramatiq:
    image: bot-core
    container_name: dramatiq
    environment:
      - DB_NAME=coredb
      - DB_HOST=host
      - DB_PORT=port
      - TASKS_REDIS_HOST=redis
      - TASKS_REDIS_PORT=6379
      - GAMES_REDIS_HOST=redis
      - GAMES_REDIS_PORT=6379
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBHOOK_HOST=${WEBHOOK_HOST}
      - WEBHOOK_PORT=${WEBHOOK_PORT}
    command: worker
    restart: always
    networks:
      - backend
    expose:
      - 9090
    depends_on:
      - backend
      - tasks-redis
      - games-redis

  tasks-redis:
    image: redis
    container_name: tasks-redis
    restart: always
    networks:
      - backend
    expose:
      - 6379
  
  games-redis:
    image: redis
    container_name: games-redis
    restart: always
    networks:
      - backend
    expose:
      - 6379

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - nginx:/etc/nginx/
    expose:
      - 80
    depends_on:
      - backend
    restart: on-failure
    networks:
      - backend
    environment:
      VIRTUAL_HOST: bot-core.nemors.ru
      LETSENCRYPT_HOST: bot-core.nemors.ru
      LETSENCRYPT_EMAIL: admin-bot-core@nemors.ru

  ingress:
    image: jwilder/nginx-proxy:alpine
    container_name: ingress
    restart: on-failure
    networks:
      - backend
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d:rw
      - html:/usr/share/nginx/html:rw
      - /var/run/docker.sock:/tmp/docker.sock:ro
    command: sh -c 'exec /app/docker-entrypoint.sh forego start -r'

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.13
    container_name: letsencrypt
    restart: always
    networks:
      - backend
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d:rw
      - html:/usr/share/nginx/html:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - ingress

volumes:
  certs:
  vhost:
  html:
  nginx:

networks:
  backend:
